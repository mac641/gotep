// Code generated from ./src/lib/parser/httpspec.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 39, 299,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5,
	3, 6, 3, 6, 3, 7, 5, 7, 104, 10, 7, 3, 7, 3, 7, 5, 7, 108, 10, 7, 3, 8,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13,
	3, 13, 3, 14, 3, 14, 3, 14, 3, 14, 5, 14, 127, 10, 14, 3, 15, 6, 15, 130,
	10, 15, 13, 15, 14, 15, 131, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17,
	3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3,
	21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 5, 25, 201,
	10, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 5, 27, 209, 10, 27, 3,
	27, 3, 27, 3, 27, 5, 27, 214, 10, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29,
	3, 29, 6, 29, 222, 10, 29, 13, 29, 14, 29, 223, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 5, 30, 231, 10, 30, 3, 31, 6, 31, 234, 10, 31, 13, 31, 14, 31,
	235, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 6,
	33, 247, 10, 33, 13, 33, 14, 33, 248, 3, 33, 3, 33, 6, 33, 253, 10, 33,
	13, 33, 14, 33, 254, 3, 34, 3, 34, 3, 34, 3, 34, 5, 34, 261, 10, 34, 3,
	35, 3, 35, 3, 35, 3, 35, 5, 35, 267, 10, 35, 3, 36, 3, 36, 3, 37, 3, 37,
	3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42, 3, 42, 3,
	43, 3, 43, 3, 44, 3, 44, 3, 44, 6, 44, 288, 10, 44, 13, 44, 14, 44, 289,
	3, 44, 3, 44, 3, 44, 3, 44, 5, 44, 296, 10, 44, 3, 44, 3, 44, 2, 2, 45,
	3, 3, 5, 4, 7, 5, 9, 2, 11, 2, 13, 6, 15, 7, 17, 2, 19, 2, 21, 8, 23, 9,
	25, 10, 27, 11, 29, 12, 31, 13, 33, 14, 35, 15, 37, 2, 39, 2, 41, 16, 43,
	17, 45, 18, 47, 19, 49, 20, 51, 21, 53, 22, 55, 23, 57, 24, 59, 25, 61,
	26, 63, 27, 65, 28, 67, 29, 69, 30, 71, 31, 73, 32, 75, 33, 77, 34, 79,
	35, 81, 36, 83, 37, 85, 38, 87, 39, 3, 2, 12, 4, 2, 12, 12, 15, 15, 4,
	2, 67, 92, 99, 124, 3, 2, 50, 59, 5, 2, 11, 11, 14, 14, 34, 34, 5, 2, 37,
	37, 49, 49, 65, 65, 3, 2, 37, 37, 3, 2, 65, 65, 4, 2, 49, 49, 95, 95, 6,
	2, 37, 37, 49, 49, 60, 60, 65, 65, 3, 2, 60, 60, 2, 317, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2,
	47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2,
	2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2,
	2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2,
	2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3,
	2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85,
	3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 3, 89, 3, 2, 2, 2, 5, 93, 3, 2, 2, 2, 7,
	95, 3, 2, 2, 2, 9, 98, 3, 2, 2, 2, 11, 100, 3, 2, 2, 2, 13, 107, 3, 2,
	2, 2, 15, 109, 3, 2, 2, 2, 17, 112, 3, 2, 2, 2, 19, 114, 3, 2, 2, 2, 21,
	116, 3, 2, 2, 2, 23, 118, 3, 2, 2, 2, 25, 120, 3, 2, 2, 2, 27, 126, 3,
	2, 2, 2, 29, 129, 3, 2, 2, 2, 31, 135, 3, 2, 2, 2, 33, 137, 3, 2, 2, 2,
	35, 139, 3, 2, 2, 2, 37, 144, 3, 2, 2, 2, 39, 146, 3, 2, 2, 2, 41, 148,
	3, 2, 2, 2, 43, 150, 3, 2, 2, 2, 45, 152, 3, 2, 2, 2, 47, 154, 3, 2, 2,
	2, 49, 200, 3, 2, 2, 2, 51, 202, 3, 2, 2, 2, 53, 204, 3, 2, 2, 2, 55, 215,
	3, 2, 2, 2, 57, 217, 3, 2, 2, 2, 59, 225, 3, 2, 2, 2, 61, 233, 3, 2, 2,
	2, 63, 237, 3, 2, 2, 2, 65, 240, 3, 2, 2, 2, 67, 256, 3, 2, 2, 2, 69, 262,
	3, 2, 2, 2, 71, 268, 3, 2, 2, 2, 73, 270, 3, 2, 2, 2, 75, 272, 3, 2, 2,
	2, 77, 274, 3, 2, 2, 2, 79, 276, 3, 2, 2, 2, 81, 278, 3, 2, 2, 2, 83, 280,
	3, 2, 2, 2, 85, 282, 3, 2, 2, 2, 87, 287, 3, 2, 2, 2, 89, 90, 7, 37, 2,
	2, 90, 91, 7, 37, 2, 2, 91, 92, 7, 37, 2, 2, 92, 4, 3, 2, 2, 2, 93, 94,
	7, 62, 2, 2, 94, 6, 3, 2, 2, 2, 95, 96, 7, 62, 2, 2, 96, 97, 7, 64, 2,
	2, 97, 8, 3, 2, 2, 2, 98, 99, 7, 15, 2, 2, 99, 10, 3, 2, 2, 2, 100, 101,
	7, 12, 2, 2, 101, 12, 3, 2, 2, 2, 102, 104, 5, 9, 5, 2, 103, 102, 3, 2,
	2, 2, 103, 104, 3, 2, 2, 2, 104, 105, 3, 2, 2, 2, 105, 108, 5, 11, 6, 2,
	106, 108, 5, 9, 5, 2, 107, 103, 3, 2, 2, 2, 107, 106, 3, 2, 2, 2, 108,
	14, 3, 2, 2, 2, 109, 110, 5, 13, 7, 2, 110, 111, 5, 29, 15, 2, 111, 16,
	3, 2, 2, 2, 112, 113, 7, 47, 2, 2, 113, 18, 3, 2, 2, 2, 114, 115, 7, 97,
	2, 2, 115, 20, 3, 2, 2, 2, 116, 117, 10, 2, 2, 2, 117, 22, 3, 2, 2, 2,
	118, 119, 9, 3, 2, 2, 119, 24, 3, 2, 2, 2, 120, 121, 9, 4, 2, 2, 121, 26,
	3, 2, 2, 2, 122, 127, 5, 23, 12, 2, 123, 127, 5, 25, 13, 2, 124, 127, 5,
	17, 9, 2, 125, 127, 5, 19, 10, 2, 126, 122, 3, 2, 2, 2, 126, 123, 3, 2,
	2, 2, 126, 124, 3, 2, 2, 2, 126, 125, 3, 2, 2, 2, 127, 28, 3, 2, 2, 2,
	128, 130, 9, 5, 2, 2, 129, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131,
	129, 3, 2, 2, 2, 131, 132, 3, 2, 2, 2, 132, 133, 3, 2, 2, 2, 133, 134,
	8, 15, 2, 2, 134, 30, 3, 2, 2, 2, 135, 136, 7, 49, 2, 2, 136, 32, 3, 2,
	2, 2, 137, 138, 7, 37, 2, 2, 138, 34, 3, 2, 2, 2, 139, 140, 5, 31, 16,
	2, 140, 141, 5, 31, 16, 2, 141, 142, 5, 21, 11, 2, 142, 143, 5, 13, 7,
	2, 143, 36, 3, 2, 2, 2, 144, 145, 7, 44, 2, 2, 145, 38, 3, 2, 2, 2, 146,
	147, 7, 48, 2, 2, 147, 40, 3, 2, 2, 2, 148, 149, 7, 60, 2, 2, 149, 42,
	3, 2, 2, 2, 150, 151, 7, 65, 2, 2, 151, 44, 3, 2, 2, 2, 152, 153, 7, 93,
	2, 2, 153, 46, 3, 2, 2, 2, 154, 155, 7, 95, 2, 2, 155, 48, 3, 2, 2, 2,
	156, 157, 7, 73, 2, 2, 157, 158, 7, 71, 2, 2, 158, 201, 7, 86, 2, 2, 159,
	160, 7, 74, 2, 2, 160, 161, 7, 71, 2, 2, 161, 162, 7, 67, 2, 2, 162, 201,
	7, 70, 2, 2, 163, 164, 7, 82, 2, 2, 164, 165, 7, 81, 2, 2, 165, 166, 7,
	85, 2, 2, 166, 201, 7, 86, 2, 2, 167, 168, 7, 82, 2, 2, 168, 169, 7, 87,
	2, 2, 169, 201, 7, 86, 2, 2, 170, 171, 7, 70, 2, 2, 171, 172, 7, 71, 2,
	2, 172, 173, 7, 78, 2, 2, 173, 174, 7, 71, 2, 2, 174, 175, 7, 86, 2, 2,
	175, 201, 7, 71, 2, 2, 176, 177, 7, 69, 2, 2, 177, 178, 7, 81, 2, 2, 178,
	179, 7, 80, 2, 2, 179, 180, 7, 80, 2, 2, 180, 181, 7, 71, 2, 2, 181, 182,
	7, 69, 2, 2, 182, 201, 7, 86, 2, 2, 183, 184, 7, 82, 2, 2, 184, 185, 7,
	67, 2, 2, 185, 186, 7, 86, 2, 2, 186, 187, 7, 69, 2, 2, 187, 201, 7, 74,
	2, 2, 188, 189, 7, 81, 2, 2, 189, 190, 7, 82, 2, 2, 190, 191, 7, 86, 2,
	2, 191, 192, 7, 75, 2, 2, 192, 193, 7, 81, 2, 2, 193, 194, 7, 80, 2, 2,
	194, 201, 7, 85, 2, 2, 195, 196, 7, 86, 2, 2, 196, 197, 7, 84, 2, 2, 197,
	198, 7, 67, 2, 2, 198, 199, 7, 69, 2, 2, 199, 201, 7, 71, 2, 2, 200, 156,
	3, 2, 2, 2, 200, 159, 3, 2, 2, 2, 200, 163, 3, 2, 2, 2, 200, 167, 3, 2,
	2, 2, 200, 170, 3, 2, 2, 2, 200, 176, 3, 2, 2, 2, 200, 183, 3, 2, 2, 2,
	200, 188, 3, 2, 2, 2, 200, 195, 3, 2, 2, 2, 201, 50, 3, 2, 2, 2, 202, 203,
	5, 37, 19, 2, 203, 52, 3, 2, 2, 2, 204, 208, 5, 57, 29, 2, 205, 206, 5,
	43, 22, 2, 206, 207, 5, 67, 34, 2, 207, 209, 3, 2, 2, 2, 208, 205, 3, 2,
	2, 2, 208, 209, 3, 2, 2, 2, 209, 213, 3, 2, 2, 2, 210, 211, 5, 33, 17,
	2, 211, 212, 5, 69, 35, 2, 212, 214, 3, 2, 2, 2, 213, 210, 3, 2, 2, 2,
	213, 214, 3, 2, 2, 2, 214, 54, 3, 2, 2, 2, 215, 216, 10, 6, 2, 2, 216,
	56, 3, 2, 2, 2, 217, 221, 5, 31, 16, 2, 218, 219, 5, 63, 32, 2, 219, 220,
	5, 55, 28, 2, 220, 222, 3, 2, 2, 2, 221, 218, 3, 2, 2, 2, 222, 223, 3,
	2, 2, 2, 223, 221, 3, 2, 2, 2, 223, 224, 3, 2, 2, 2, 224, 58, 3, 2, 2,
	2, 225, 226, 7, 106, 2, 2, 226, 227, 7, 118, 2, 2, 227, 228, 7, 118, 2,
	2, 228, 230, 7, 114, 2, 2, 229, 231, 7, 117, 2, 2, 230, 229, 3, 2, 2, 2,
	230, 231, 3, 2, 2, 2, 231, 60, 3, 2, 2, 2, 232, 234, 5, 25, 13, 2, 233,
	232, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2, 235, 233, 3, 2, 2, 2, 235, 236,
	3, 2, 2, 2, 236, 62, 3, 2, 2, 2, 237, 238, 5, 31, 16, 2, 238, 239, 5, 15,
	8, 2, 239, 64, 3, 2, 2, 2, 240, 241, 7, 74, 2, 2, 241, 242, 7, 86, 2, 2,
	242, 243, 7, 86, 2, 2, 243, 244, 7, 82, 2, 2, 244, 246, 5, 31, 16, 2, 245,
	247, 5, 25, 13, 2, 246, 245, 3, 2, 2, 2, 247, 248, 3, 2, 2, 2, 248, 246,
	3, 2, 2, 2, 248, 249, 3, 2, 2, 2, 249, 250, 3, 2, 2, 2, 250, 252, 5, 39,
	20, 2, 251, 253, 5, 25, 13, 2, 252, 251, 3, 2, 2, 2, 253, 254, 3, 2, 2,
	2, 254, 252, 3, 2, 2, 2, 254, 255, 3, 2, 2, 2, 255, 66, 3, 2, 2, 2, 256,
	260, 10, 7, 2, 2, 257, 258, 5, 15, 8, 2, 258, 259, 5, 67, 34, 2, 259, 261,
	3, 2, 2, 2, 260, 257, 3, 2, 2, 2, 260, 261, 3, 2, 2, 2, 261, 68, 3, 2,
	2, 2, 262, 266, 10, 8, 2, 2, 263, 264, 5, 15, 8, 2, 264, 265, 5, 69, 35,
	2, 265, 267, 3, 2, 2, 2, 266, 263, 3, 2, 2, 2, 266, 267, 3, 2, 2, 2, 267,
	70, 3, 2, 2, 2, 268, 269, 10, 9, 2, 2, 269, 72, 3, 2, 2, 2, 270, 271, 10,
	10, 2, 2, 271, 74, 3, 2, 2, 2, 272, 273, 10, 11, 2, 2, 273, 76, 3, 2, 2,
	2, 274, 275, 7, 125, 2, 2, 275, 78, 3, 2, 2, 2, 276, 277, 7, 127, 2, 2,
	277, 80, 3, 2, 2, 2, 278, 279, 7, 39, 2, 2, 279, 82, 3, 2, 2, 2, 280, 281,
	7, 62, 2, 2, 281, 84, 3, 2, 2, 2, 282, 283, 7, 64, 2, 2, 283, 86, 3, 2,
	2, 2, 284, 285, 5, 17, 9, 2, 285, 286, 5, 17, 9, 2, 286, 288, 3, 2, 2,
	2, 287, 284, 3, 2, 2, 2, 288, 289, 3, 2, 2, 2, 289, 287, 3, 2, 2, 2, 289,
	290, 3, 2, 2, 2, 290, 291, 3, 2, 2, 2, 291, 295, 5, 21, 11, 2, 292, 293,
	5, 17, 9, 2, 293, 294, 5, 17, 9, 2, 294, 296, 3, 2, 2, 2, 295, 292, 3,
	2, 2, 2, 295, 296, 3, 2, 2, 2, 296, 297, 3, 2, 2, 2, 297, 298, 5, 13, 7,
	2, 298, 88, 3, 2, 2, 2, 19, 2, 103, 107, 126, 131, 200, 208, 213, 223,
	230, 235, 248, 254, 260, 266, 289, 295, 3, 3, 15, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'###'", "'<'", "'<>'", "", "", "", "", "", "", "", "'\u002F'", "'\u0023'",
	"", "'\u003A'", "'\u003F'", "'\u005B'", "'\u005D'", "", "", "", "", "",
	"", "", "", "", "", "", "", "", "", "'\u007B'", "'\u007D'", "'\u0025'",
	"'\u003C'", "'\u003E'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "NEWLINE", "NEWLINEWITHINDENT", "INPUT", "ALPHA", "DIGIT",
	"ID", "WHITESPACE", "SLASH", "HASHTAG", "LINECOMMENT", "COLON", "QUESTIONMARK",
	"LEFTSQUAREBRACKET", "RIGHTSQUAREBRACKET", "METHOD", "ASTERISKFORM", "ORIGINFORM",
	"SEGMENT", "ABSOLUTEPATH", "SCHEME", "PORT", "PATHSEPARATOR", "HTTPVERSION",
	"QUERY", "REQUESTFRAGMENT", "IPV6ADDRESS", "IPV4ADDRESSORREGNAME", "FIELDNAME",
	"LEFTCURLYBRACKET", "RIGHTCURLYBRACKET", "PERCENTSIGN", "LESSTHANSIGN",
	"GREATERTHANSIGN", "BOUNDARY",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "CR", "LF", "NEWLINE", "NEWLINEWITHINDENT", "HYPHEN",
	"UNDERSCORE", "INPUT", "ALPHA", "DIGIT", "ID", "WHITESPACE", "SLASH", "HASHTAG",
	"LINECOMMENT", "ASTERISK", "FULLSTOP", "COLON", "QUESTIONMARK", "LEFTSQUAREBRACKET",
	"RIGHTSQUAREBRACKET", "METHOD", "ASTERISKFORM", "ORIGINFORM", "SEGMENT",
	"ABSOLUTEPATH", "SCHEME", "PORT", "PATHSEPARATOR", "HTTPVERSION", "QUERY",
	"REQUESTFRAGMENT", "IPV6ADDRESS", "IPV4ADDRESSORREGNAME", "FIELDNAME",
	"LEFTCURLYBRACKET", "RIGHTCURLYBRACKET", "PERCENTSIGN", "LESSTHANSIGN",
	"GREATERTHANSIGN", "BOUNDARY",
}

type httpspecLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewhttpspecLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *httpspecLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewhttpspecLexer(input antlr.CharStream) *httpspecLexer {
	l := new(httpspecLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "httpspec.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// httpspecLexer tokens.
const (
	httpspecLexerT__0                 = 1
	httpspecLexerT__1                 = 2
	httpspecLexerT__2                 = 3
	httpspecLexerNEWLINE              = 4
	httpspecLexerNEWLINEWITHINDENT    = 5
	httpspecLexerINPUT                = 6
	httpspecLexerALPHA                = 7
	httpspecLexerDIGIT                = 8
	httpspecLexerID                   = 9
	httpspecLexerWHITESPACE           = 10
	httpspecLexerSLASH                = 11
	httpspecLexerHASHTAG              = 12
	httpspecLexerLINECOMMENT          = 13
	httpspecLexerCOLON                = 14
	httpspecLexerQUESTIONMARK         = 15
	httpspecLexerLEFTSQUAREBRACKET    = 16
	httpspecLexerRIGHTSQUAREBRACKET   = 17
	httpspecLexerMETHOD               = 18
	httpspecLexerASTERISKFORM         = 19
	httpspecLexerORIGINFORM           = 20
	httpspecLexerSEGMENT              = 21
	httpspecLexerABSOLUTEPATH         = 22
	httpspecLexerSCHEME               = 23
	httpspecLexerPORT                 = 24
	httpspecLexerPATHSEPARATOR        = 25
	httpspecLexerHTTPVERSION          = 26
	httpspecLexerQUERY                = 27
	httpspecLexerREQUESTFRAGMENT      = 28
	httpspecLexerIPV6ADDRESS          = 29
	httpspecLexerIPV4ADDRESSORREGNAME = 30
	httpspecLexerFIELDNAME            = 31
	httpspecLexerLEFTCURLYBRACKET     = 32
	httpspecLexerRIGHTCURLYBRACKET    = 33
	httpspecLexerPERCENTSIGN          = 34
	httpspecLexerLESSTHANSIGN         = 35
	httpspecLexerGREATERTHANSIGN      = 36
	httpspecLexerBOUNDARY             = 37
)

var ignoreWs = false

func (l *httpspecLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 13:
		l.WHITESPACE_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *httpspecLexer) WHITESPACE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		if ignoreWs {
			l.Skip()
		}

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
