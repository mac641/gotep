// Code generated from ./src/lib/parser/httpspec.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 41, 343,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 5, 4,
	99, 10, 4, 3, 4, 3, 4, 5, 4, 103, 10, 4, 3, 5, 3, 5, 3, 5, 3, 6, 7, 6,
	109, 10, 6, 12, 6, 14, 6, 112, 11, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3,
	8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12,
	6, 12, 130, 10, 12, 13, 12, 14, 12, 131, 3, 13, 6, 13, 135, 10, 13, 13,
	13, 14, 13, 136, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16,
	3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 5, 16, 152, 10, 16, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22,
	3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 5, 24, 217, 10,
	24, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 5, 26, 225, 10, 26, 3, 26,
	3, 26, 3, 26, 5, 26, 230, 10, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3,
	28, 6, 28, 238, 10, 28, 13, 28, 14, 28, 239, 3, 29, 3, 29, 3, 29, 3, 29,
	3, 29, 5, 29, 247, 10, 29, 3, 30, 6, 30, 250, 10, 30, 13, 30, 14, 30, 251,
	3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 6, 32, 263,
	10, 32, 13, 32, 14, 32, 264, 3, 32, 3, 32, 6, 32, 269, 10, 32, 13, 32,
	14, 32, 270, 3, 33, 3, 33, 3, 33, 3, 33, 5, 33, 277, 10, 33, 3, 34, 3,
	34, 3, 34, 3, 34, 5, 34, 283, 10, 34, 3, 35, 6, 35, 286, 10, 35, 13, 35,
	14, 35, 287, 3, 36, 3, 36, 3, 36, 3, 36, 5, 36, 294, 10, 36, 3, 37, 3,
	37, 3, 38, 3, 38, 3, 39, 3, 39, 3, 40, 3, 40, 3, 41, 3, 41, 3, 42, 3, 42,
	3, 43, 3, 43, 3, 43, 6, 43, 311, 10, 43, 13, 43, 14, 43, 312, 3, 43, 3,
	43, 3, 43, 3, 43, 5, 43, 319, 10, 43, 3, 43, 3, 43, 3, 44, 3, 44, 3, 44,
	3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3, 46, 3, 46, 3,
	46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 3, 46, 2, 2, 47, 3, 2, 5,
	2, 7, 3, 9, 4, 11, 5, 13, 2, 15, 2, 17, 6, 19, 7, 21, 8, 23, 9, 25, 10,
	27, 11, 29, 12, 31, 13, 33, 2, 35, 2, 37, 14, 39, 15, 41, 16, 43, 17, 45,
	18, 47, 19, 49, 20, 51, 21, 53, 22, 55, 23, 57, 24, 59, 25, 61, 26, 63,
	27, 65, 28, 67, 29, 69, 30, 71, 31, 73, 32, 75, 33, 77, 34, 79, 35, 81,
	36, 83, 37, 85, 38, 87, 39, 89, 40, 91, 41, 3, 2, 10, 4, 2, 12, 12, 15,
	15, 4, 2, 67, 92, 99, 124, 3, 2, 50, 59, 5, 2, 11, 11, 14, 14, 34, 34,
	5, 2, 37, 37, 49, 49, 65, 65, 3, 2, 37, 37, 3, 2, 65, 65, 3, 2, 60, 60,
	2, 366, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2,
	2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 2,
	2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2,
	2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 3,
	2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 75,
	3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2, 81, 3, 2, 2, 2, 2,
	83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2, 2, 89, 3, 2, 2, 2,
	2, 91, 3, 2, 2, 2, 3, 93, 3, 2, 2, 2, 5, 95, 3, 2, 2, 2, 7, 102, 3, 2,
	2, 2, 9, 104, 3, 2, 2, 2, 11, 110, 3, 2, 2, 2, 13, 115, 3, 2, 2, 2, 15,
	117, 3, 2, 2, 2, 17, 119, 3, 2, 2, 2, 19, 121, 3, 2, 2, 2, 21, 123, 3,
	2, 2, 2, 23, 129, 3, 2, 2, 2, 25, 134, 3, 2, 2, 2, 27, 140, 3, 2, 2, 2,
	29, 142, 3, 2, 2, 2, 31, 151, 3, 2, 2, 2, 33, 155, 3, 2, 2, 2, 35, 157,
	3, 2, 2, 2, 37, 159, 3, 2, 2, 2, 39, 161, 3, 2, 2, 2, 41, 163, 3, 2, 2,
	2, 43, 165, 3, 2, 2, 2, 45, 167, 3, 2, 2, 2, 47, 216, 3, 2, 2, 2, 49, 218,
	3, 2, 2, 2, 51, 220, 3, 2, 2, 2, 53, 231, 3, 2, 2, 2, 55, 233, 3, 2, 2,
	2, 57, 241, 3, 2, 2, 2, 59, 249, 3, 2, 2, 2, 61, 253, 3, 2, 2, 2, 63, 256,
	3, 2, 2, 2, 65, 272, 3, 2, 2, 2, 67, 278, 3, 2, 2, 2, 69, 285, 3, 2, 2,
	2, 71, 289, 3, 2, 2, 2, 73, 295, 3, 2, 2, 2, 75, 297, 3, 2, 2, 2, 77, 299,
	3, 2, 2, 2, 79, 301, 3, 2, 2, 2, 81, 303, 3, 2, 2, 2, 83, 305, 3, 2, 2,
	2, 85, 310, 3, 2, 2, 2, 87, 322, 3, 2, 2, 2, 89, 326, 3, 2, 2, 2, 91, 331,
	3, 2, 2, 2, 93, 94, 7, 15, 2, 2, 94, 4, 3, 2, 2, 2, 95, 96, 7, 12, 2, 2,
	96, 6, 3, 2, 2, 2, 97, 99, 5, 3, 2, 2, 98, 97, 3, 2, 2, 2, 98, 99, 3, 2,
	2, 2, 99, 100, 3, 2, 2, 2, 100, 103, 5, 5, 3, 2, 101, 103, 5, 3, 2, 2,
	102, 98, 3, 2, 2, 2, 102, 101, 3, 2, 2, 2, 103, 8, 3, 2, 2, 2, 104, 105,
	5, 7, 4, 2, 105, 106, 5, 25, 13, 2, 106, 10, 3, 2, 2, 2, 107, 109, 5, 17,
	9, 2, 108, 107, 3, 2, 2, 2, 109, 112, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2,
	110, 111, 3, 2, 2, 2, 111, 113, 3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 113,
	114, 5, 7, 4, 2, 114, 12, 3, 2, 2, 2, 115, 116, 7, 47, 2, 2, 116, 14, 3,
	2, 2, 2, 117, 118, 7, 97, 2, 2, 118, 16, 3, 2, 2, 2, 119, 120, 10, 2, 2,
	2, 120, 18, 3, 2, 2, 2, 121, 122, 9, 3, 2, 2, 122, 20, 3, 2, 2, 2, 123,
	124, 9, 4, 2, 2, 124, 22, 3, 2, 2, 2, 125, 130, 5, 19, 10, 2, 126, 130,
	5, 21, 11, 2, 127, 130, 5, 13, 7, 2, 128, 130, 5, 15, 8, 2, 129, 125, 3,
	2, 2, 2, 129, 126, 3, 2, 2, 2, 129, 127, 3, 2, 2, 2, 129, 128, 3, 2, 2,
	2, 130, 131, 3, 2, 2, 2, 131, 129, 3, 2, 2, 2, 131, 132, 3, 2, 2, 2, 132,
	24, 3, 2, 2, 2, 133, 135, 9, 5, 2, 2, 134, 133, 3, 2, 2, 2, 135, 136, 3,
	2, 2, 2, 136, 134, 3, 2, 2, 2, 136, 137, 3, 2, 2, 2, 137, 138, 3, 2, 2,
	2, 138, 139, 8, 13, 2, 2, 139, 26, 3, 2, 2, 2, 140, 141, 7, 49, 2, 2, 141,
	28, 3, 2, 2, 2, 142, 143, 7, 37, 2, 2, 143, 30, 3, 2, 2, 2, 144, 145, 5,
	29, 15, 2, 145, 146, 5, 11, 6, 2, 146, 152, 3, 2, 2, 2, 147, 148, 5, 27,
	14, 2, 148, 149, 5, 27, 14, 2, 149, 150, 5, 11, 6, 2, 150, 152, 3, 2, 2,
	2, 151, 144, 3, 2, 2, 2, 151, 147, 3, 2, 2, 2, 152, 153, 3, 2, 2, 2, 153,
	154, 8, 16, 3, 2, 154, 32, 3, 2, 2, 2, 155, 156, 7, 44, 2, 2, 156, 34,
	3, 2, 2, 2, 157, 158, 7, 48, 2, 2, 158, 36, 3, 2, 2, 2, 159, 160, 7, 60,
	2, 2, 160, 38, 3, 2, 2, 2, 161, 162, 7, 65, 2, 2, 162, 40, 3, 2, 2, 2,
	163, 164, 7, 93, 2, 2, 164, 42, 3, 2, 2, 2, 165, 166, 7, 95, 2, 2, 166,
	44, 3, 2, 2, 2, 167, 168, 5, 29, 15, 2, 168, 169, 5, 29, 15, 2, 169, 170,
	5, 29, 15, 2, 170, 171, 5, 11, 6, 2, 171, 46, 3, 2, 2, 2, 172, 173, 7,
	73, 2, 2, 173, 174, 7, 71, 2, 2, 174, 217, 7, 86, 2, 2, 175, 176, 7, 74,
	2, 2, 176, 177, 7, 71, 2, 2, 177, 178, 7, 67, 2, 2, 178, 217, 7, 70, 2,
	2, 179, 180, 7, 82, 2, 2, 180, 181, 7, 81, 2, 2, 181, 182, 7, 85, 2, 2,
	182, 217, 7, 86, 2, 2, 183, 184, 7, 82, 2, 2, 184, 185, 7, 87, 2, 2, 185,
	217, 7, 86, 2, 2, 186, 187, 7, 70, 2, 2, 187, 188, 7, 71, 2, 2, 188, 189,
	7, 78, 2, 2, 189, 190, 7, 71, 2, 2, 190, 191, 7, 86, 2, 2, 191, 217, 7,
	71, 2, 2, 192, 193, 7, 69, 2, 2, 193, 194, 7, 81, 2, 2, 194, 195, 7, 80,
	2, 2, 195, 196, 7, 80, 2, 2, 196, 197, 7, 71, 2, 2, 197, 198, 7, 69, 2,
	2, 198, 217, 7, 86, 2, 2, 199, 200, 7, 82, 2, 2, 200, 201, 7, 67, 2, 2,
	201, 202, 7, 86, 2, 2, 202, 203, 7, 69, 2, 2, 203, 217, 7, 74, 2, 2, 204,
	205, 7, 81, 2, 2, 205, 206, 7, 82, 2, 2, 206, 207, 7, 86, 2, 2, 207, 208,
	7, 75, 2, 2, 208, 209, 7, 81, 2, 2, 209, 210, 7, 80, 2, 2, 210, 217, 7,
	85, 2, 2, 211, 212, 7, 86, 2, 2, 212, 213, 7, 84, 2, 2, 213, 214, 7, 67,
	2, 2, 214, 215, 7, 69, 2, 2, 215, 217, 7, 71, 2, 2, 216, 172, 3, 2, 2,
	2, 216, 175, 3, 2, 2, 2, 216, 179, 3, 2, 2, 2, 216, 183, 3, 2, 2, 2, 216,
	186, 3, 2, 2, 2, 216, 192, 3, 2, 2, 2, 216, 199, 3, 2, 2, 2, 216, 204,
	3, 2, 2, 2, 216, 211, 3, 2, 2, 2, 217, 48, 3, 2, 2, 2, 218, 219, 5, 33,
	17, 2, 219, 50, 3, 2, 2, 2, 220, 224, 5, 55, 28, 2, 221, 222, 5, 39, 20,
	2, 222, 223, 5, 65, 33, 2, 223, 225, 3, 2, 2, 2, 224, 221, 3, 2, 2, 2,
	224, 225, 3, 2, 2, 2, 225, 229, 3, 2, 2, 2, 226, 227, 5, 29, 15, 2, 227,
	228, 5, 67, 34, 2, 228, 230, 3, 2, 2, 2, 229, 226, 3, 2, 2, 2, 229, 230,
	3, 2, 2, 2, 230, 52, 3, 2, 2, 2, 231, 232, 10, 6, 2, 2, 232, 54, 3, 2,
	2, 2, 233, 237, 5, 27, 14, 2, 234, 235, 5, 61, 31, 2, 235, 236, 5, 53,
	27, 2, 236, 238, 3, 2, 2, 2, 237, 234, 3, 2, 2, 2, 238, 239, 3, 2, 2, 2,
	239, 237, 3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240, 56, 3, 2, 2, 2, 241, 242,
	7, 106, 2, 2, 242, 243, 7, 118, 2, 2, 243, 244, 7, 118, 2, 2, 244, 246,
	7, 114, 2, 2, 245, 247, 7, 117, 2, 2, 246, 245, 3, 2, 2, 2, 246, 247, 3,
	2, 2, 2, 247, 58, 3, 2, 2, 2, 248, 250, 5, 21, 11, 2, 249, 248, 3, 2, 2,
	2, 250, 251, 3, 2, 2, 2, 251, 249, 3, 2, 2, 2, 251, 252, 3, 2, 2, 2, 252,
	60, 3, 2, 2, 2, 253, 254, 5, 27, 14, 2, 254, 255, 5, 9, 5, 2, 255, 62,
	3, 2, 2, 2, 256, 257, 7, 74, 2, 2, 257, 258, 7, 86, 2, 2, 258, 259, 7,
	86, 2, 2, 259, 260, 7, 82, 2, 2, 260, 262, 5, 27, 14, 2, 261, 263, 5, 21,
	11, 2, 262, 261, 3, 2, 2, 2, 263, 264, 3, 2, 2, 2, 264, 262, 3, 2, 2, 2,
	264, 265, 3, 2, 2, 2, 265, 266, 3, 2, 2, 2, 266, 268, 5, 35, 18, 2, 267,
	269, 5, 21, 11, 2, 268, 267, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270, 268,
	3, 2, 2, 2, 270, 271, 3, 2, 2, 2, 271, 64, 3, 2, 2, 2, 272, 276, 10, 7,
	2, 2, 273, 274, 5, 9, 5, 2, 274, 275, 5, 65, 33, 2, 275, 277, 3, 2, 2,
	2, 276, 273, 3, 2, 2, 2, 276, 277, 3, 2, 2, 2, 277, 66, 3, 2, 2, 2, 278,
	282, 10, 8, 2, 2, 279, 280, 5, 9, 5, 2, 280, 281, 5, 67, 34, 2, 281, 283,
	3, 2, 2, 2, 282, 279, 3, 2, 2, 2, 282, 283, 3, 2, 2, 2, 283, 68, 3, 2,
	2, 2, 284, 286, 10, 9, 2, 2, 285, 284, 3, 2, 2, 2, 286, 287, 3, 2, 2, 2,
	287, 285, 3, 2, 2, 2, 287, 288, 3, 2, 2, 2, 288, 70, 3, 2, 2, 2, 289, 293,
	5, 11, 6, 2, 290, 291, 5, 9, 5, 2, 291, 292, 5, 71, 36, 2, 292, 294, 3,
	2, 2, 2, 293, 290, 3, 2, 2, 2, 293, 294, 3, 2, 2, 2, 294, 72, 3, 2, 2,
	2, 295, 296, 7, 125, 2, 2, 296, 74, 3, 2, 2, 2, 297, 298, 7, 127, 2, 2,
	298, 76, 3, 2, 2, 2, 299, 300, 7, 39, 2, 2, 300, 78, 3, 2, 2, 2, 301, 302,
	7, 62, 2, 2, 302, 80, 3, 2, 2, 2, 303, 304, 7, 64, 2, 2, 304, 82, 3, 2,
	2, 2, 305, 306, 5, 11, 6, 2, 306, 84, 3, 2, 2, 2, 307, 308, 5, 13, 7, 2,
	308, 309, 5, 13, 7, 2, 309, 311, 3, 2, 2, 2, 310, 307, 3, 2, 2, 2, 311,
	312, 3, 2, 2, 2, 312, 310, 3, 2, 2, 2, 312, 313, 3, 2, 2, 2, 313, 314,
	3, 2, 2, 2, 314, 318, 5, 17, 9, 2, 315, 316, 5, 13, 7, 2, 316, 317, 5,
	13, 7, 2, 317, 319, 3, 2, 2, 2, 318, 315, 3, 2, 2, 2, 318, 319, 3, 2, 2,
	2, 319, 320, 3, 2, 2, 2, 320, 321, 5, 7, 4, 2, 321, 86, 3, 2, 2, 2, 322,
	323, 5, 79, 40, 2, 323, 324, 5, 25, 13, 2, 324, 325, 5, 83, 42, 2, 325,
	88, 3, 2, 2, 2, 326, 327, 5, 79, 40, 2, 327, 328, 5, 81, 41, 2, 328, 329,
	5, 25, 13, 2, 329, 330, 5, 83, 42, 2, 330, 90, 3, 2, 2, 2, 331, 332, 5,
	73, 37, 2, 332, 333, 5, 73, 37, 2, 333, 334, 8, 46, 4, 2, 334, 335, 5,
	25, 13, 2, 335, 336, 8, 46, 5, 2, 336, 337, 5, 23, 12, 2, 337, 338, 8,
	46, 6, 2, 338, 339, 5, 25, 13, 2, 339, 340, 8, 46, 7, 2, 340, 341, 5, 75,
	38, 2, 341, 342, 5, 75, 38, 2, 342, 92, 3, 2, 2, 2, 24, 2, 98, 102, 110,
	129, 131, 136, 151, 216, 224, 229, 239, 246, 251, 264, 270, 276, 282, 287,
	293, 312, 318, 8, 3, 13, 2, 8, 2, 2, 3, 46, 3, 3, 46, 4, 3, 46, 5, 3, 46,
	6,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "", "", "", "", "'\u002F'", "'\u0023'", "", "'\u003A'",
	"'\u003F'", "'\u005B'", "'\u005D'", "", "", "", "", "", "", "", "", "",
	"", "", "", "", "", "'\u007B'", "'\u007D'", "'\u0025'", "'\u003C'", "'\u003E'",
}

var lexerSymbolicNames = []string{
	"", "NEWLINE", "NEWLINEWITHINDENT", "LINETAIL", "INPUT", "ALPHA", "DIGIT",
	"ID", "WHITESPACE", "SLASH", "HASHTAG", "LINECOMMENT", "COLON", "QUESTIONMARK",
	"LEFTSQUAREBRACKET", "RIGHTSQUAREBRACKET", "REQUESTSEPARATOR", "METHOD",
	"ASTERISKFORM", "ORIGINFORM", "SEGMENT", "ABSOLUTEPATH", "SCHEME", "PORT",
	"PATHSEPARATOR", "HTTPVERSION", "QUERY", "REQUESTFRAGMENT", "FIELDNAME",
	"FIELDVALUE", "LEFTCURLYBRACKET", "RIGHTCURLYBRACKET", "PERCENTSIGN", "LESSTHANSIGN",
	"GREATERTHANSIGN", "FILEPATH", "BOUNDARY", "INPUTFILEREF", "RESPONSEREF",
	"ENVVARIABLE",
}

var lexerRuleNames = []string{
	"CR", "LF", "NEWLINE", "NEWLINEWITHINDENT", "LINETAIL", "HYPHEN", "UNDERSCORE",
	"INPUT", "ALPHA", "DIGIT", "ID", "WHITESPACE", "SLASH", "HASHTAG", "LINECOMMENT",
	"ASTERISK", "FULLSTOP", "COLON", "QUESTIONMARK", "LEFTSQUAREBRACKET", "RIGHTSQUAREBRACKET",
	"REQUESTSEPARATOR", "METHOD", "ASTERISKFORM", "ORIGINFORM", "SEGMENT",
	"ABSOLUTEPATH", "SCHEME", "PORT", "PATHSEPARATOR", "HTTPVERSION", "QUERY",
	"REQUESTFRAGMENT", "FIELDNAME", "FIELDVALUE", "LEFTCURLYBRACKET", "RIGHTCURLYBRACKET",
	"PERCENTSIGN", "LESSTHANSIGN", "GREATERTHANSIGN", "FILEPATH", "BOUNDARY",
	"INPUTFILEREF", "RESPONSEREF", "ENVVARIABLE",
}

type httpspecLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewhttpspecLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *httpspecLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewhttpspecLexer(input antlr.CharStream) *httpspecLexer {
	l := new(httpspecLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "httpspec.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// httpspecLexer tokens.
const (
	httpspecLexerNEWLINE            = 1
	httpspecLexerNEWLINEWITHINDENT  = 2
	httpspecLexerLINETAIL           = 3
	httpspecLexerINPUT              = 4
	httpspecLexerALPHA              = 5
	httpspecLexerDIGIT              = 6
	httpspecLexerID                 = 7
	httpspecLexerWHITESPACE         = 8
	httpspecLexerSLASH              = 9
	httpspecLexerHASHTAG            = 10
	httpspecLexerLINECOMMENT        = 11
	httpspecLexerCOLON              = 12
	httpspecLexerQUESTIONMARK       = 13
	httpspecLexerLEFTSQUAREBRACKET  = 14
	httpspecLexerRIGHTSQUAREBRACKET = 15
	httpspecLexerREQUESTSEPARATOR   = 16
	httpspecLexerMETHOD             = 17
	httpspecLexerASTERISKFORM       = 18
	httpspecLexerORIGINFORM         = 19
	httpspecLexerSEGMENT            = 20
	httpspecLexerABSOLUTEPATH       = 21
	httpspecLexerSCHEME             = 22
	httpspecLexerPORT               = 23
	httpspecLexerPATHSEPARATOR      = 24
	httpspecLexerHTTPVERSION        = 25
	httpspecLexerQUERY              = 26
	httpspecLexerREQUESTFRAGMENT    = 27
	httpspecLexerFIELDNAME          = 28
	httpspecLexerFIELDVALUE         = 29
	httpspecLexerLEFTCURLYBRACKET   = 30
	httpspecLexerRIGHTCURLYBRACKET  = 31
	httpspecLexerPERCENTSIGN        = 32
	httpspecLexerLESSTHANSIGN       = 33
	httpspecLexerGREATERTHANSIGN    = 34
	httpspecLexerFILEPATH           = 35
	httpspecLexerBOUNDARY           = 36
	httpspecLexerINPUTFILEREF       = 37
	httpspecLexerRESPONSEREF        = 38
	httpspecLexerENVVARIABLE        = 39
)

var ignoreWs = false

func (l *httpspecLexer) Action(localctx antlr.RuleContext, ruleIndex, actionIndex int) {
	switch ruleIndex {
	case 11:
		l.WHITESPACE_Action(localctx, actionIndex)

	case 44:
		l.ENVVARIABLE_Action(localctx, actionIndex)

	default:
		panic("No registered action for: " + fmt.Sprint(ruleIndex))
	}
}

func (l *httpspecLexer) WHITESPACE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 0:
		if ignoreWs {
			l.Skip()
		}

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
func (l *httpspecLexer) ENVVARIABLE_Action(localctx antlr.RuleContext, actionIndex int) {
	switch actionIndex {
	case 1:
		ignoreWs = true

	case 2:
		ignoreWs = false

	case 3:
		ignoreWs = true

	case 4:
		ignoreWs = false

	default:
		panic("No registered action for: " + fmt.Sprint(actionIndex))
	}
}
